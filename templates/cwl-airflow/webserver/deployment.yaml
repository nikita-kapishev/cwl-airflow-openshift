apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.airflow.name }}-webserver
  labels:
    app: {{ .Values.airflow.name }}-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.airflow.name }}-webserver
  template:
    metadata:
      labels:
        app: {{ .Values.airflow.name }}-webserver
    spec:
      initContainers:
        - name: {{ .Values.airflow.name }}-webserver-init
          image: bitnami/git:latest
          env:
            - name: GIT_REPO
              value: {{ .Values.airflow.git_uri }}
          command:
            - /bin/bash
            - -c
            - |
              git clone $GIT_REPO /opt/airflow/git-repo;
              cd $_;
              sed -i -e 's/git\@\(github\.com\)\:/https\:\/\/\1\//g' -e 's/\/Users\/misha\/harvard\/github\/nsaph-cwl-airflow\///g' .gitmodules;
              mkdir ~/.ssh;
              ssh-keyscan github.com >> ~/.ssh/known_hosts;
              git submodule update --init --recursive;
              cp -run ./project /opt/airflow/;
              cp -run ./project/examples/* /opt/airflow/dags/;
              # tail -f /dev/null;
              # cd /opt/airflow/;
              # git clone $GIT_REPO git-repo;
              # cp -run ./git-repo/project ./;
              # cp -run ./git-repo/project/examples/* ./dags/;
          volumeMounts:
          - mountPath: /opt/airflow/dags
            name: airflow
            subPath: dags
          - mountPath: /opt/airflow/project
            name: airflow
            subPath: project
      containers: 
        - name: {{ .Values.airflow.name }}-webserver
          image: "{{ .Values.airflow.output_registry }}/{{ .Values.airflow.project }}/{{ .Values.airflow.name }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: "AIRFLOW_CONDA_ENV"
              value: "conda_default"
            - name: "_AIRFLOW_WWW_USER_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "cwl-airflow-openshift.secrets" . }}
                  key: airflow-password
            - name: "_AIRFLOW_WWW_USER_USERNAME"
              value: {{ .Values.airflow.username }}
            - name: "AIRFLOW__CORE__EXECUTOR"
              value: "LocalExecutor"
            - name: "AIRFLOW_CONN_METADATA_DB"
              value: {{ include "cwl-airflow-openshift.dbconn" . }}
            - name: "AIRFLOW__CORE__SQL_ALCHEMY_CONN"
              value: {{ include "cwl-airflow-openshift.dbconn" . }}
            - name: "AIRFLOW_HOME"
              value: "/opt/airflow"
            - name: "AIRFLOW__CORE__DAGS_FOLDER"
              value: "/opt/airflow/dags"
            - name: "AIRFLOW_VAR__METADATA_DB_SCHEMA"
              value: "airflow"
            - name: "AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION"
              value: "true"
            - name: "AIRFLOW__CORE__FERNET_KEY"
              value: ""
            - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
              value: "false"
            - name: "AIRFLOW__LOGGING__BASE_LOG_FOLDER"
              value: "/opt/airflow/logs"
            - name: "AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC"
              value: "10"
            - name: "AIRFLOW__WEBSERVER__BASE_URL"
              value: "http://localhost:8080"
            - name: "WEB_SERVER_PORT"
              value: "8080"
            - name: "AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX"
              value: "true"
            - name: "AIRFLOW__WEBSERVER__EXPOSE_CONFIG"
              value: "true"
            - name: "POSTGRE_DB"
              value: {{ include "cwl-airflow-openshift.database.name" . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "cwl-airflow-openshift.secrets" . }}
                  key: postgresql-password
            - name: "POSTGRE_SERVER"
              value: {{ include "cwl-airflow-openshift.postgresql.fullname" . }}
            - name: "POSTGRE_USER"
              value: {{ include "cwl-airflow-openshift.database.user" . }}
            - name: "PROJECT_DIR"
              value: "/opt/airflow/project"
            - name: "_AIRFLOW_DB_UPGRADE"
              value: "true"
            - name: "_AIRFLOW_WWW_USER_CREATE"
              value: "true"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          stdin: true
          command: [ "entrypoint.sh" ]
          args: [ "airflow" ,"webserver" ]
          volumeMounts:
          - mountPath: /opt/airflow/dags
            name: airflow
            subPath: dags
          - mountPath: /opt/airflow/project
            name: airflow
            subPath: project
          - mountPath: /opt/airflow/logs
            name: airflow
            subPath: logs
          - mountPath: /opt/airflow/project/temp/cwl_tmp_folder
            name: airflow
            subPath: cwl_tmp_folder
          - mountPath: /opt/airflow/project/temp/cwl_inputs_folder
            name: airflow
            subPath: cwl_inputs_folder
          - mountPath: /opt/airflow/project/temp/cwl_outputs_folder
            name: airflow
            subPath: cwl_outputs_folder
          - mountPath: /opt/airflow/project/temp/cwl_pickle_folder
            name: airflow
            subPath: cwl_pickle_folder
      volumes:
      - name: airflow
        persistentVolumeClaim:
          claimName: airflow-claim