apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.airflow.name }}-webserver
  labels:
    app: {{ .Values.airflow.name }}-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.airflow.name }}-webserver
  template:
    metadata:
      labels:
        app: {{ .Values.airflow.name }}-webserver
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 0
        runAsUser: 0
        runAsGroup: 0
      containers: 
        - name: {{ .Values.airflow.name }}-webserver
          image: "{{ .Values.airflow.output_registry }}/{{ .Values.airflow.project }}/{{ .Values.airflow.name }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
        {{- if .Values.airflow.env }}
          env:
          {{- range $key, $val := .Values.airflow.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
          {{- end }}
        {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          stdin: true
          # command: [ "bash" ]
          # args: [ "-c" ,"tail -f /dev/null" ]
          command: [ "entrypoint.sh" ]
          args: [ "airflow" ,"webserver" ]
